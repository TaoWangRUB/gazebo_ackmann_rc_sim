<?xml version="1.0"?>
<robot name="ackmann_robot" xmlns:xacro="http://ros.org/wiki/xacro"> 
  
  <xacro:property name="package_name" value="rebot_description"/>
  <xacro:property name="PI" value="3.14159265"/>
  
  <xacro:property name="wheel_separation" value="0.2"/>
  <xacro:property name="wheel_base" value="0.224"/>
  <xacro:property name="wheel_diameter" value="0.07"/>
  <xacro:property name="wheel_thickness" value="0.024"/>
  <xacro:property name="base_elevation" value="0.01"/>

  <xacro:arg name="base_color"    default="1.0 0.0 0.0 1.0"/>
  <xacro:arg name="ns"    default="ackmann"/>
  
  <!-- Custom color (for Gz and RViz) -->
  <material name="gray">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  
  <link name="$(arg ns)/base_footprint"/>

  <joint name="$(arg ns)/base_joint" type="fixed">
    <parent link="$(arg ns)/base_footprint"/>
    <child link="$(arg ns)/base_link"/>
    <origin xyz="0 0 ${base_elevation}" rpy="0 0 0"/>
  </joint>

  <link name="$(arg ns)/base_link">
    <visual>
      <origin xyz=".1371 0 -.0115" rpy="0 0 ${PI/2}"/>
      <geometry>
        <mesh filename="package://robot_description/models/donkey/meshes/BaseReduced.dae" scale="1 1 1"/>
      </geometry>
      <material name="base_color"> <!-- Color in IGN and Rviz2 (inside visual tag) -->
        <color rgba="$(arg base_color)"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 .06" rpy="0 0 0"/>
      <geometry>
        <box size=".3 .09 .12"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 ${wheel_diameter-base_elevation}" rpy="0 0 0"/>
      <mass value="3.0"/>
      <inertia ixx="0.0054" ixy="0.0" ixz="0.0"  
               iyy="0.0252" iyz="0.0"  
               izz="0.0252"/>
    </inertial>
  </link>

  <!-- Wheels definition (joints and links) -->
  <joint name="$(arg ns)/front_left_wheel_joint" type="continuous">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="$(arg ns)/front_left_wheel_steering_link"/>
    <child link="$(arg ns)/front_left_wheel_link"/>
    <axis xyz="0 1 0"/>
    <limit lower="-1e16" upper="1e16" effort="100" velocity="100"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <joint name="$(arg ns)/front_left_wheel_steering_joint" type="revolute">
    <origin xyz="${wheel_base/2} ${wheel_separation/2} 0" rpy="0 0 0"/>
    <parent link="$(arg ns)/base_link"/>
    <child link="$(arg ns)/front_left_wheel_steering_link"/>
    <axis xyz="0 0 1"/>
    <limit lower="-0.6" upper="0.6" effort="25" velocity="1"/>
  </joint>

  <link name="$(arg ns)/front_left_wheel_steering_link">
    <origin xyz="0 0 0.0" rpy="0 0 0"/>
    <inertial>
      <mass value="0.005" />
      <inertia ixx="0.0000018" ixy="0.0" ixz="0.0"  
               iyy="0.0000018" iyz="0.0"  
               izz="0.0000018"/>
      </inertial>
  </link>

  <link name="$(arg ns)/front_left_wheel_link">
    <origin xyz="0 0 0.0" rpy="0 0 0"/>
    <inertial>
      <mass value="0.05" />
      <inertia ixx="0.00003331" ixy="0.0" ixz="0.0"  
               iyy="0.0000204" iyz="0.0"  
               izz="0.0000204"/>
      </inertial>
      <visual name="donkey_front_left_wheel_visual">
        <origin xyz="0 0 0" rpy="0 0 ${PI}"/>
        <geometry>
          <mesh filename="package://robot_description/models/donkey/meshes/Wheel.dae"/>
        </geometry>
      </visual>
      <collision name="front_left_wheel_collision">
        <!-- offset z: 0.015 ; rotated -90째 about X-axis -->
        <origin xyz="0 -0.015 0" rpy="${-PI/2} 0 0"/>
        <geometry>
          <cylinder radius="0.0365" length="0.03"/>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu value="0.5"/>
              <mu2 value="1.0"/>
              <fdir1 value="0 0 1"/>
            </ode>
          </friction>
        </surface>
      </collision>
  </link>

  <joint name="$(arg ns)/front_right_wheel_joint" type="continuous">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="$(arg ns)/front_right_wheel_steering_link"/>
    <child link="$(arg ns)/front_right_wheel_link"/>
    <axis xyz="0 1 0"/>
    <limit lower="-1e16" upper="1e16" effort="100" velocity="100"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>
  <joint name="$(arg ns)/front_right_wheel_steering_joint" type="revolute">
    <parent link="$(arg ns)/base_link"/>
    <child link="$(arg ns)/front_right_wheel_steering_link"/>
    <origin xyz="${wheel_base/2} ${-wheel_separation/2} 0" rpy="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit lower="-0.6" upper="0.6" effort="25" velocity="1"/>
  </joint>

  <link name="$(arg ns)/front_right_wheel_steering_link">
    <origin xyz="0 0 0.0" rpy="0 0 0"/>
    <inertial>
      <mass value="0.005" />
      <inertia ixx="0.0000018" ixy="0.0" ixz="0.0"  
               iyy="0.0000018" iyz="0.0"  
               izz="0.0000018"/>
      </inertial>
  </link>

  <link name="$(arg ns)/front_right_wheel_link">
    <origin xyz="0 0 0.0" rpy="0 0 0"/>
    <inertial>
      <mass value="0.05" />
      <inertia ixx="0.00003331" ixy="0.0" ixz="0.0"  
               iyy="0.0000204" iyz="0.0"  
               izz="0.0000204"/>
      </inertial>
      <visual name="donkey_front_right_wheel_visual">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://robot_description/models/donkey/meshes/Wheel.dae"/>
        </geometry>
      </visual>
      <collision name="front_right_wheel_collision">
        <!-- offset z: 0.015 ; rotated -90째 about X-axis -->
        <origin xyz="0 0.015 0" rpy="${-PI/2} 0 0"/>
        <geometry>
          <cylinder radius="0.0365" length="0.03"/>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu value="0.5"/>
              <mu2 value="1.0"/>
              <fdir1 value="0 0 1"/>
            </ode>
          </friction>
        </surface>
      </collision>
  </link>

  <joint name="$(arg ns)/rear_left_wheel_joint" type="continuous">
    <origin xyz="${-wheel_base/2} ${wheel_separation/2} 0" rpy="0 0 0"/>
    <parent link="$(arg ns)/base_link"/>
    <child link="$(arg ns)/rear_left_wheel_link"/>
    <axis xyz="0 1 0"/>
    <limit lower="-1e16" upper="1e16" effort="100" velocity="100"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>

  <link name="$(arg ns)/rear_left_wheel_link">
    <origin xyz="0 0 0.0" rpy="0 0 0"/>
    <inertial>
      <mass value="0.05" />
      <inertia ixx="0.00003331" ixy="0.0" ixz="0.0"  
               iyy="0.0000204" iyz="0.0"  
               izz="0.0000204"/>
      </inertial>
      <visual name="donkey_rear_left_wheel_visual">
        <origin xyz="0 0 0" rpy="0 0 ${PI}"/>
        <geometry>
          <mesh filename="package://robot_description/models/donkey/meshes/Wheel.dae"/>
        </geometry>
      </visual>
      <collision name="rear_left_wheel_collision">
        <!-- offset z: 0.015 ; rotated -90째 about X-axis -->
        <origin xyz="0 -0.015 0" rpy="${-PI/2} 0 0"/>
        <geometry>
          <cylinder radius="0.0365" length="0.03"/>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu value="0.5"/>
              <mu2 value="1.0"/>
              <fdir1 value="0 0 1"/>
            </ode>
          </friction>
        </surface>
      </collision>
  </link>
  
  <joint name="$(arg ns)/rear_right_wheel_joint" type="continuous">
    <origin xyz="${-wheel_base/2} ${-wheel_separation/2} 0" rpy="0 0 0"/>
    <parent link="$(arg ns)/base_link"/>
    <child link="$(arg ns)/rear_right_wheel_link"/>
    <axis xyz="0 1 0"/>
    <limit lower="-1e16" upper="1e16" effort="100" velocity="100"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>

  <link name="$(arg ns)/rear_right_wheel_link">
    <origin xyz="0 0 0.0" rpy="0 0 0"/>
    <inertial>
      <mass value="0.05" />
      <inertia ixx="0.00003331" ixy="0.0" ixz="0.0"  
               iyy="0.0000204" iyz="0.0"  
               izz="0.0000204"/>
      </inertial>
      <visual name="donkey_rear_right_wheel_visual">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://robot_description/models/donkey/meshes/Wheel.dae"/>
        </geometry>
      </visual>
      <collision name="rear_right_wheel_collision">
        <!-- offset z: 0.015 ; rotated -90째 about X-axis -->
        <origin xyz="0 0.015 0" rpy="${-PI/2} 0 0"/>
        <geometry>
          <cylinder radius="0.0365" length="0.03"/>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu value="0.5"/>
              <mu2 value="1.0"/>
              <fdir1 value="0 0 1"/>
            </ode>
          </friction>
        </surface>
      </collision>
  </link>

  <!-- SENSORS -->
  <!-- RGBD CAMERA -->
  <xacro:arg name="use_nominal_extrinsics" default="true" />
  <xacro:arg name="add_plug" default="false" />
  <xacro:arg name="use_mesh" default="true" />
  <xacro:include filename="$(find robot_description)/urdf/realsense/_d435i.urdf.xacro"/>

  <xacro:sensor_d435i name="d435i" parent="$(arg ns)/base_link" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
    <origin xyz="0.1 0 0.184" rpy="0 0 0"/>
  </xacro:sensor_d435i>

  <xacro:include filename="$(find robot_description)/urdf/realsense/_l515.urdf.xacro" />
  <xacro:sensor_l515 name="l515" parent="$(arg ns)/base_link" use_nominal_extrinsics="$(arg use_nominal_extrinsics)" add_plug="$(arg add_plug)" use_mesh="$(arg use_mesh)">
    <origin xyz="0.1 0 0.1" rpy="0 0 0"/>
  </xacro:sensor_l515>

  <gazebo>
    <plugin
      filename="gz-sim-ackermann-steering-system"
      name="gz::sim::systems::AckermannSteering">
      <left_joint>$(arg ns)/front_left_wheel_joint</left_joint>
      <left_joint>$(arg ns)/rear_left_wheel_joint</left_joint>
      <right_joint>$(arg ns)/front_right_wheel_joint</right_joint>
      <right_joint>$(arg ns)/front_right_wheel_joint</right_joint>
      <left_steering_joint>$(arg ns)/front_left_wheel_steering_joint</left_steering_joint>
      <right_steering_joint>$(arg ns)/front_right_wheel_steering_joint</right_steering_joint>
      <kingpin_width>0.199</kingpin_width>
      <steering_limit>0.4</steering_limit>
      <wheel_base>${wheel_base}</wheel_base>
      <wheel_separation>${wheel_separation}</wheel_separation>
      <wheel_radius>${wheel_diameter/2}</wheel_radius>
      <min_velocity>-10.0</min_velocity>
      <max_velocity>10.0</max_velocity>
      <min_acceleration>-10</min_acceleration>
      <max_acceleration>10</max_acceleration>
      <!-- <topic>cmd_vel</topic> -->
      <odom_topic>encoder</odom_topic>
    </plugin>

    <!-- World odometry plugin (by default, odometry topic is used) -->
    <plugin filename="gz-sim-odometry-publisher-system"
      name="gz::sim::systems::OdometryPublisher">
      <dimensions>3</dimensions>
      <odom_frame>$(arg ns)/odom</odom_frame>
      <robot_base_frame>$(arg ns)/base_footprint</robot_base_frame>
      <publish_link_pose>true</publish_link_pose>
      <tf_topic>$(arg ns)/tf</tf_topic> 
    </plugin>

    <plugin
      filename="gz-sim-joint-state-publisher-system"
      name="gz::sim::systems::JointStatePublisher">
    </plugin>
  </gazebo>

</robot>